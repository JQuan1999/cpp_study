// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: test.proto

#ifndef PROTOBUF_INCLUDED_test_2eproto
#define PROTOBUF_INCLUDED_test_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_test_2eproto 

namespace protobuf_test_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_test_2eproto
namespace Proto {
class FileContent;
class FileContentDefaultTypeInternal;
extern FileContentDefaultTypeInternal _FileContent_default_instance_;
class FileContent_Student;
class FileContent_StudentDefaultTypeInternal;
extern FileContent_StudentDefaultTypeInternal _FileContent_Student_default_instance_;
}  // namespace Proto
namespace google {
namespace protobuf {
template<> ::Proto::FileContent* Arena::CreateMaybeMessage<::Proto::FileContent>(Arena*);
template<> ::Proto::FileContent_Student* Arena::CreateMaybeMessage<::Proto::FileContent_Student>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace Proto {

// ===================================================================

class FileContent_Student : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Proto.FileContent.Student) */ {
 public:
  FileContent_Student();
  virtual ~FileContent_Student();

  FileContent_Student(const FileContent_Student& from);

  inline FileContent_Student& operator=(const FileContent_Student& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FileContent_Student(FileContent_Student&& from) noexcept
    : FileContent_Student() {
    *this = ::std::move(from);
  }

  inline FileContent_Student& operator=(FileContent_Student&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FileContent_Student& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FileContent_Student* internal_default_instance() {
    return reinterpret_cast<const FileContent_Student*>(
               &_FileContent_Student_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(FileContent_Student* other);
  friend void swap(FileContent_Student& a, FileContent_Student& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FileContent_Student* New() const final {
    return CreateMaybeMessage<FileContent_Student>(NULL);
  }

  FileContent_Student* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FileContent_Student>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FileContent_Student& from);
  void MergeFrom(const FileContent_Student& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FileContent_Student* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 11;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 11;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional int32 age = 12;
  bool has_age() const;
  void clear_age();
  static const int kAgeFieldNumber = 12;
  ::google::protobuf::int32 age() const;
  void set_age(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Proto.FileContent.Student)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_age();
  void clear_has_age();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 age_;
  friend struct ::protobuf_test_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FileContent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Proto.FileContent) */ {
 public:
  FileContent();
  virtual ~FileContent();

  FileContent(const FileContent& from);

  inline FileContent& operator=(const FileContent& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FileContent(FileContent&& from) noexcept
    : FileContent() {
    *this = ::std::move(from);
  }

  inline FileContent& operator=(FileContent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FileContent& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FileContent* internal_default_instance() {
    return reinterpret_cast<const FileContent*>(
               &_FileContent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(FileContent* other);
  friend void swap(FileContent& a, FileContent& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FileContent* New() const final {
    return CreateMaybeMessage<FileContent>(NULL);
  }

  FileContent* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FileContent>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FileContent& from);
  void MergeFrom(const FileContent& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FileContent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef FileContent_Student Student;

  // accessors -------------------------------------------------------

  // optional string content = 1;
  bool has_content() const;
  void clear_content();
  static const int kContentFieldNumber = 1;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // optional .Proto.FileContent.Student stu = 2;
  bool has_stu() const;
  void clear_stu();
  static const int kStuFieldNumber = 2;
  private:
  const ::Proto::FileContent_Student& _internal_stu() const;
  public:
  const ::Proto::FileContent_Student& stu() const;
  ::Proto::FileContent_Student* release_stu();
  ::Proto::FileContent_Student* mutable_stu();
  void set_allocated_stu(::Proto::FileContent_Student* stu);

  // @@protoc_insertion_point(class_scope:Proto.FileContent)
 private:
  void set_has_content();
  void clear_has_content();
  void set_has_stu();
  void clear_has_stu();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  ::Proto::FileContent_Student* stu_;
  friend struct ::protobuf_test_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// FileContent_Student

// optional string name = 11;
inline bool FileContent_Student::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FileContent_Student::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FileContent_Student::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FileContent_Student::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& FileContent_Student::name() const {
  // @@protoc_insertion_point(field_get:Proto.FileContent.Student.name)
  return name_.GetNoArena();
}
inline void FileContent_Student::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto.FileContent.Student.name)
}
#if LANG_CXX11
inline void FileContent_Student::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Proto.FileContent.Student.name)
}
#endif
inline void FileContent_Student::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto.FileContent.Student.name)
}
inline void FileContent_Student::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto.FileContent.Student.name)
}
inline ::std::string* FileContent_Student::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:Proto.FileContent.Student.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileContent_Student::release_name() {
  // @@protoc_insertion_point(field_release:Proto.FileContent.Student.name)
  if (!has_name()) {
    return NULL;
  }
  clear_has_name();
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileContent_Student::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Proto.FileContent.Student.name)
}

// optional int32 age = 12;
inline bool FileContent_Student::has_age() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FileContent_Student::set_has_age() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FileContent_Student::clear_has_age() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FileContent_Student::clear_age() {
  age_ = 0;
  clear_has_age();
}
inline ::google::protobuf::int32 FileContent_Student::age() const {
  // @@protoc_insertion_point(field_get:Proto.FileContent.Student.age)
  return age_;
}
inline void FileContent_Student::set_age(::google::protobuf::int32 value) {
  set_has_age();
  age_ = value;
  // @@protoc_insertion_point(field_set:Proto.FileContent.Student.age)
}

// -------------------------------------------------------------------

// FileContent

// optional string content = 1;
inline bool FileContent::has_content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FileContent::set_has_content() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FileContent::clear_has_content() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FileContent::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content();
}
inline const ::std::string& FileContent::content() const {
  // @@protoc_insertion_point(field_get:Proto.FileContent.content)
  return content_.GetNoArena();
}
inline void FileContent::set_content(const ::std::string& value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto.FileContent.content)
}
#if LANG_CXX11
inline void FileContent::set_content(::std::string&& value) {
  set_has_content();
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Proto.FileContent.content)
}
#endif
inline void FileContent::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto.FileContent.content)
}
inline void FileContent::set_content(const char* value, size_t size) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto.FileContent.content)
}
inline ::std::string* FileContent::mutable_content() {
  set_has_content();
  // @@protoc_insertion_point(field_mutable:Proto.FileContent.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileContent::release_content() {
  // @@protoc_insertion_point(field_release:Proto.FileContent.content)
  if (!has_content()) {
    return NULL;
  }
  clear_has_content();
  return content_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileContent::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:Proto.FileContent.content)
}

// optional .Proto.FileContent.Student stu = 2;
inline bool FileContent::has_stu() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FileContent::set_has_stu() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FileContent::clear_has_stu() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FileContent::clear_stu() {
  if (stu_ != NULL) stu_->Clear();
  clear_has_stu();
}
inline const ::Proto::FileContent_Student& FileContent::_internal_stu() const {
  return *stu_;
}
inline const ::Proto::FileContent_Student& FileContent::stu() const {
  const ::Proto::FileContent_Student* p = stu_;
  // @@protoc_insertion_point(field_get:Proto.FileContent.stu)
  return p != NULL ? *p : *reinterpret_cast<const ::Proto::FileContent_Student*>(
      &::Proto::_FileContent_Student_default_instance_);
}
inline ::Proto::FileContent_Student* FileContent::release_stu() {
  // @@protoc_insertion_point(field_release:Proto.FileContent.stu)
  clear_has_stu();
  ::Proto::FileContent_Student* temp = stu_;
  stu_ = NULL;
  return temp;
}
inline ::Proto::FileContent_Student* FileContent::mutable_stu() {
  set_has_stu();
  if (stu_ == NULL) {
    auto* p = CreateMaybeMessage<::Proto::FileContent_Student>(GetArenaNoVirtual());
    stu_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Proto.FileContent.stu)
  return stu_;
}
inline void FileContent::set_allocated_stu(::Proto::FileContent_Student* stu) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete stu_;
  }
  if (stu) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      stu = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, stu, submessage_arena);
    }
    set_has_stu();
  } else {
    clear_has_stu();
  }
  stu_ = stu;
  // @@protoc_insertion_point(field_set_allocated:Proto.FileContent.stu)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Proto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_test_2eproto
